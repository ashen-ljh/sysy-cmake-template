decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()

 global @a_0_0 = alloc i32
 %0 = add 0, 1
 store %0, @a_0_0
 global @x_0_0 = alloc i32, zeroinit

fun @pow(@x_1_1: i32): i32 {
%entry:
 %x_1_1 = alloc i32
 store @x_1_1, %x_1_1
 %1 = load %x_1_1
 %2 = add 0, 0
 %3 = eq %1, %2
 br %3, %then__0, %end__0
%then__0:
 %4 = add 0, 1
 ret %4
%end__0:
 %5 = add 0, 2
 %6 = add 0, 1
 %7 = load %x_1_1
 %8 = sub %7, %6
 %9 = call @pow(%8)
 %10 = mul %5, %9
 ret %10
}
fun @xx(@x_2_1: i32, @y_2_1: i32, @z_2_1: i32): i32 {
%entry:
 %x_2_1 = alloc i32
 store @x_2_1, %x_2_1
 %y_2_1 = alloc i32
 store @y_2_1, %y_2_1
 %z_2_1 = alloc i32
 store @z_2_1, %z_2_1
 %11 = load %z_2_1
 %12 = load %y_2_1
 %13 = add %11, %12
 ret %13
}
fun @f(){
%entry:
 ret
}
fun @main(): i32 {
%entry:
 @w_4_1 = alloc i32
 %14 = add 0, 15
 store %14, @w_4_1
 call @f()
 %16 = add 0 ,8
 %17 = call @pow(%16)
 %18 = load @a_0_0
 %19 = call @pow(%18)
 %20 = add %17, %19
 ret %20
}
