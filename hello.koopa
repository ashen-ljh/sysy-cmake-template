decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()

 @a_0_0 = alloc i32
 %0 = add 0, 4
 store %0, @a_0_0
 @x_0_0 = alloc i32
 %1 = add 0, 2
 store %1, @x_0_0

fun @half(@x_1_0: i32, @y_1_0: i32, @z_1_0: i32): i32 {
%entry:
 %x_1_1 = alloc i32
 store @x_1_1, %x_1_1
 %y_1_1 = alloc i32
 store @y_1_1, %y_1_1
 %z_1_1 = alloc i32
 store @z_1_1, %z_1_1
 @t_1_1 = alloc i32
 %2 = load %z_1_1
 %3 = load %y_1_1
 %4 = load %x_1_1
 %5 = load @a_0_0
 %6 = add %4, %5
 %7 = add %3, %6
 %8 = add %2, %7
 store %8, @t_1_1
 %9 = load @t_1_1
 ret %9
}
fun @xx(@x_2_0: i32, @y_2_0: i32, @z_2_0: i32): i32 {
%entry:
 %x_2_1 = alloc i32
 store @x_2_1, %x_2_1
 %y_2_1 = alloc i32
 store @y_2_1, %y_2_1
 %z_2_1 = alloc i32
 store @z_2_1, %z_2_1
 %10 = load %z_2_1
 %11 = load %y_2_1
 %12 = add %10, %11
 ret %12
}
fun @f(){
%entry:
 ret
}
fun @main(@a_4_0: i32): i32 {
%entry:
 %a_4_1 = alloc i32
 store @a_4_1, %a_4_1
 call @f()
 @b_4_1 = alloc i32
 %14 = add 0, 1
 %15 = add 0, 2
 %16 = add 0, 3
 %17 = call @xx(%14, %15, %16)
 store %17, @b_4_1
 %18 = load @b_4_1
 %19 = add 0, 10
 %20 = load %a_4_1
 %21 = add 0, 5
 %22 = call @half(%19, %20, %21)
 %23 = add %18, %22
 ret %23
}
